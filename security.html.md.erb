---
title: Security for On-Demand Services
owner: London Services Enablement
---

This topic gives you information about the API endpoints that the on-demand broker (<%= vars.product_abbr %>)
accesses, and the minimum UAA authorities and corresponding permissions required
for the <%= vars.product_abbr %> to operate correctly.

## <a id="bosh-endpoints"></a>BOSH API Endpoints

<%= vars.product_abbr %> accesses the following BOSH API endpoints during the service instance lifecycle:

| API endpoint                                                   | Examples of usage in <%= vars.product_abbr %>                                                                                                                                 |
|:---------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------------------------------------------------------------|
| `POST /deployments`                                            | Create or update a service instance                                                                                                                         |
| `POST /deployments/DEPLOYMENT-NAME/errands/ERRAND-NAME/runs`   | <ul><li>Register or de-register the on-demand broker with the Cloud Controller</li><li>Run smoke tests</li></ul>                                                                   |
| `GET /deployments/DEPLOYMENT-NAME`                             | Passed as argument to the service adapter for `generate-manifest` and `create-binding`                                                                       |
| `GET /deployments/DEPLOYMENT-NAME/vms?format=full`             | Passed as argument to the service adapter for `create-binding`                                                                                               |
| `DELETE /deployments/DEPLOYMENT-NAME`                          | Delete a service instance                                                                                                                                    |
| `GET /tasks/TASK-ID/output?type=result`                        | <ul><li>Check a task was successful (i.e. the exit code was zero)</li><li>Get list of VMs</li></ul>                                                                                  |
| `GET /tasks/TASK-ID`                                           | Poll the BOSH Director until a task finishes, e.g. create, update, or delete a deployment                                                                    |
| `GET /tasks?deployment=DEPLOYMENT-NAME`                        | Determine the last operation status and message for a service instance, e.g. 'create in progress'. Used when creating, updating, deleting service instances. |

For information about BOSH API endpoints, see [Director HTTP API](https://bosh.io/docs/director-api-v1.html)
in the BOSH documentation.


## <a id="bosh-uaa"></a>BOSH UAA Permissions

The actions that <%= vars.product_abbr %> needs to be able to perform are:

Modify:

- `bosh deploy`
- `bosh delete-deployment`
- `bosh run-errand`

Read only:

- `bosh deployments`
- `bosh vms`
- `bosh tasks`

The minimum UAA authority required by the BOSH Director to perform these actions
is `bosh.teams.TEAM-NAME.admin`.

<p class="note"><strong>Note:</strong>
	A team admin cannot view or update the Director's cloud config, nor upload releases or stemcells.
</p>

For information on how to set up and use BOSH teams, see
[Using BOSH Teams](https://bosh.io/docs/director-bosh-teams/) in the BOSH
documentation.

### <a id="unused-bosh"></a> Unused BOSH permissions

The `bosh.teams.TEAM-NAME.admin` authority also allows the following actions, which currently are
not used by <%= vars.product_abbr %>:

- `bosh start/stop/recreate`
- `bosh cck`
- `bosh logs`
- `bosh releases`
- `bosh stemcells`

## <a id="ipsec"></a>Pivotal IPsec

VMware tested <%= vars.product_abbr %> with the Pivotal IPsec add-on and it appears to work.
The tests excluded the BOSH Director itself from IPsec ranges because the BOSH
add-on cannot be applied to BOSH itself.

For how to install the Pivotal IPsec add-on, see
[Installing Pivotal IPsec](https://docs.pivotal.io/addon-ipsec/installing.html).


## <a id="cf-endpoints"></a>CF API Endpoints

<%= vars.product_abbr %> accesses the following CF API endpoints during the service instance lifecycle:

| API endpoint                                                         | Examples of usage in <%= vars.product_abbr %>                                                                           |
|:---------------------------------------------------------------------|:-------------------------------------------------------------------------------------------------------|
| `GET /v2/info`                                                       | Identify CF API version to determine feature compatibility & availability                              |
| `GET /v2/services`                                                   | List all services to find our own service based on defined unique ID rather than GUID                  |
| `GET /v2/services/SERVICE-GUID/service_plans`                        | Find registered service plans for <%= vars.product_abbr %> service e.g. for calculating plan quota usage                    |
| `GET /v2/service_brokers`                                            | Find service broker metadata by name during broker deregistration                                      |
| `DELETE /v2/service_brokers/SERVICE-BROKER-GUID`                     | Delete <%= vars.product_abbr %> service broker during broker deregister errand                                              |
| `GET /v2/service_plans/SERVICE-PLAN-GUID`                            | Identify service plan when upgrading an instance to trigger any lifecycle errands                      |
| `PUT /v2/service_plans/SERVICE-PLAN-GUID`                            | Deactivate service access prior to service deletion                                                       |
| `GET /v2/service_plans/SERVICE-PLAN-GUID/service_instances`          | Find service instances for given plan when determining global quota and running startup checks         |
| `GET /v2/service_instances/SERVICE-INSTANCE-GUID`                    | Determine service instance state to check an operation is not in progress before triggering an upgrade |
| `DELETE /v2/service_instances/SERVICE-INSTANCE-GUID`                 | Deleting a service instance during delete all service instances errand                                 |
| `GET /v2/service_instances/SERVICE-INSTANCE-GUID/service_bindings`   | Finding bindings for given service instance during delete all service instances errand                 |
| `GET /v2/service_instances/SERVICE-INSTANCE-GUID/service_keys`       | Finding service keys for given service instance during delete all service instances errand             |
| `DELETE /v2/apps/APP-GUID/service_bindings/SERVICE-BINDING-GUID`     | Unbinding a service instance during delete all service instances errand                                |
| `DELETE /v2/service_keys/SERVICE-KEY-GUID`                           | Deleting a service key during delete all service instances errand                                      |

For information about Cloud Foundry API endpoints, see the [Cloud Foundry API](https://apidocs.cloudfoundry.org/)
documentation.

## <a id="cf-uaa"></a>Cloud Foundry UAA Permissions

The actions that <%= vars.product_abbr %> needs to be able to perform are:

Modify:

- `cf enable-service-access`
- `cf disable-service-access`
- `cf create-service-broker`
- `cf delete-service-broker`
- `cf delete-service`
- `cf unbind-service`
- `cf delete-service-key`

Read only:

- `cf api`
- `cf marketplace`
- `cf service-brokers`
- `cf services`
- `cf service`
- `cf app`
- `cf service-keys`

The minimum UAA authority required by Cloud Foundry to perform these actions is `cloud_controller.admin`.
Admin is required as many operations are required to perform against all of the
on-demand service instances across a foundation, regardless of org and space.

### <a id="unused-cf"></a> Unused Cloud Foundry permissions

The Cloud Controller admin authority also allows the following actions, which
currently are not used by <%= vars.product_abbr %>:

- `cf push`
- `cf delete`
- `cf start`
- `cf restart`
- `cf restage`
- `cf stop`
- `cf create-service-key`
- `cf create-user-provided-service`
- `cf update-user-provided-service`
- `cf run-task`
- `cf logs`
- `cf ssh`
- `cf scale`
- `cf events`
- Route and domain management
- Space management
- Org management
- CLI plugin management
